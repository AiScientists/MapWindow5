<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imageList1.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAAy
        BwAAAk1TRnQBSQFMAgEBAwEAAQgBAAEIAQABEAEAARABAAT/ASEBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABEAMAAQEBAAEgBgABEP8A/wD/AP8AFgADEQEWAU0BTwFNAY4BUwFWAVMBowMwAUjwAAFQAVIBUAGq
        AXwBoQF8Af4BjAG+AYwB/wFfAWwBXwHUNAADCAELA08BkwNJAX+wAAFSAVMBUgHPAYIBrAGCAf8BjAG+
        AYwB/wFkAXUBZAHnNAADOQFYAWMBcAFjAfcBZQF3AWUB5wMTARmsAAMgASwBUgFZAVIB8AFYAWEBWAHy
        AUoBTAFKAY00AAMDAQQBVgFYAVYB5gF1AZcBdQH/AVYBVwFWAco4AAMCAQMDBAEGGAABGwEcARsBJQFC
        AkMBbQMaASNMAAMRARYDHwEqAwABATgAAxsBJQFpAXsBaQHrAWgBfAFoAfoDNAFOLAADEgEYAU8BUQFQ
        AZABbQGFAW4B9gFxAYsBcgH8AWABbAFjAcMBSwFNAUwBgwMyAUkDCAEKARkCGgEiAUYBSAFHAXYBagF+
        AWsB6wF4AZwBeAH7AW4BiAFwAfYBVQFYAVYBqAEUAhUBG4wAA00BiwGEAbABhAH/AVYBWwFWAbAsAAFJ
        AUoBSQF8AYwBuAGMAf8BlwHNAZcB/wGTAcgBkwH/AZABwwGQAf8BiQG5AYkB/wFsAYgBbQH5AVQBWQFW
        AfsBXgFoAV8B8wF2AZYBdwH+AYwBvgGMAf8BjAG+AYwB/wGMAb4BjAH/AYQBrwGEAf8BTQFPAU4BiVAA
        AxEBFgNBAWgDOAFVAwgBCwwAAwgBCwM4AVUDQQFoAxEBFhAAAxkBIgFbAWIBWwHtAWwBggFsAfoDNAFO
        KAABYQFqAWIBuwGdAdUBnQH/AZoB0AGaAf8BlgHLAZYB/wGSAccBkgH/AY8BwQGPAf8BjQG/AY0B/wGM
        Ab4BjAH/AYwBvgGMAf8BjAG+AYwB/wGMAb4BjAH/AYwBvgGMAf8BjAG+AYwB/wGMAb4BjAH/AVwBZQFe
        AbNMAAMBAQIBVAFVAVQB7gF5AZsBeQH+AW0BiQFtAf0DRwF5DAADRwF5AW0BiQFtAf0BeQGbAXkB/gFU
        AVUBVAHuAwEBAhAAAzEBSQFtAYMBbQH6AVIBVgFSAfkDTwH/A08B/wNPAf8DTwH/A08B/wNPAf8DRQF0
        DAABagF7AWwB0AGfAdgBnwH/AZwB0wGcAf8BmAHOAZgB/wGVAcoBlQH/AZEBxQGRAf8BjQHAAY0B/wGM
        Ab4BjAH/AYwBvgGMAf8BjAG+AYwB/wGMAb4BjAH/AYwBvgGMAf8BjAG+AYwB/wGMAb4BjAH/AV0BZwFf
        AbdMAAMfASoBXAFnAVwB8gGMAb4BjAH/AYwBvgGMAf8BVQFXAVUBowwAAVUBVwFVAaMBjAG+AYwB/wGM
        Ab4BjAH/AVwBZwFcAfIDHwEqFAABWgFfAVoBswFtAYcBbQH/AW0BhwFtAf8BbQGHAW0B/wFtAYcBbQH/
        AW0BhwFtAf8BbQGHAW0B/wFtAYcBbQH/A0cBegwAAV0BYwFdAbABngHWAZ4B/wGeAdcBngH/AZsB0gGb
        Af8BlwHNAZcB/wGTAcgBkwH/AZABwwGQAf8BjQG/AY0B/wGMAb4BjAH/AYwBvgGMAf8BjAG+AYwB/wGM
        Ab4BjAH/AYwBvgGMAf8BjAG9AYwB/wFWAVsBVwGhTAADAQECAVQBVQFUAe4BeQGbAXkB/gFtAYkBbQH9
        A0cBeQwAA0cBeQFtAYkBbQH9AXkBmwF5Af4BVAFVAVQB7gMBAQJEAAE3ATgBNwFSAXABhgFxAfgBoAHZ
        AaAB/wGdAdUBnQH/AZkB0AGZAf8BlgHLAZYB/wGSAccBkgH/AY4BwQGOAf8BjAG+AYwB/wGMAb4BjAH/
        AYkBuAGJAf8BiwG8AYsB/wGMAb4BjAH/AXIBkgFzAf8BQQFCAUEBZ1AAAxEBFgNBAWgDOAFVAwgBCwwA
        AwgBCwM4AVUDQQFoAxEBFkgAAwMBBAFOAU8BTgGMAXIBiQFyAesBigG1AYoB/gGQAcABkQH/AY4BvQGO
        Af8BfwGmAYAB/AFxAYwBcgH8AWYBdQFmAdcBUwFXAVQBmQFJAUsBSgF9AUkCSgF/AU4BUAFPAY0BQwFF
        AUQBbgMKAQ3MAAMOARIBUQFUAVIBlwFYAVwBWAG8AVkBXgFbAcQBSgFLAUoBfwMOARNcAAFCAU0BPgcA
        AT4DAAEoAwABQAMAARADAAEBAQABAQUAAYAXAAP/AQAG/wIABv8CAAb/AgAG/wIAAQ8F/wIAAQ8B/wGP
        A/8CAAEPAf8BhwP/AgABDwH/AYcB/wHnAeMCAAGPAf8BwwH/AYADAAL/AeMB/wGAAwAB8ALhAf8BgAMA
        AuAB8AEDAYADAALgAfgBAwGAAwAC4AL/AYADAAHwAeEC/wGAAwAE/wHgAX8CAAs=
</value>
  </data>
</root>